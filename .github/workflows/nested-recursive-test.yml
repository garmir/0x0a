name: Nested Recursive Test Delegation
on: [push, workflow_dispatch]

jobs:
  nested-recursive-testing:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test_category: [nix-wrapping, github-cli, tree-performance, ubuntu-fallback, agent-automation, recursive-success, parallel-matrix, artifact-collection, geographic-distribution, cascade-triggering]
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
        continue-on-error: true

      - name: Nested Recursive Testing - ${{ matrix.test_category }}
        continue-on-error: true
        run: |
          case "${{ matrix.test_category }}" in
            "nix-wrapping")
              nix-shell -p bash --run 'nix-shell -p coreutils --run "nix-shell -p findutils --run \"echo Recursive nix-shell nesting test > nested-nix-test.txt\""'
              ;;
            "github-cli")
              nix-shell -p github-cli --run 'nix-shell -p jq --run "gh api user | jq .login > github-cli-nested.txt"'
              ;;
            "tree-performance")
              nix-shell -p bash --run 'start=$(date +%s); nix-shell -p coreutils --run "nix-shell -p findutils --run \"find . -name \"*.yml\" | wc -l\""; end=$(date +%s); echo "Tree test: $((end-start))s" > tree-performance.txt'
              ;;
            "ubuntu-fallback")
              sudo apt-get update -qq && sudo apt-get install -y curl && curl -s ifconfig.me > ubuntu-fallback.txt
              ;;
            "agent-automation")
              nix-shell -p nodejs --run 'nix-shell -p expect --run "echo Agent automation nested test > agent-automation.txt"'
              ;;
            "recursive-success")
              nix-shell -p bash --run 'for i in {1..3}; do nix-shell -p coreutils --run "echo Recursive iteration $i >> recursive-success.txt"; done'
              ;;
            "parallel-matrix")
              nix-shell -p bash --run 'nix-shell -p coreutils --run "echo Parallel test 1 > parallel-1.txt" & nix-shell -p coreutils --run "echo Parallel test 2 > parallel-2.txt" & wait'
              ;;
            "artifact-collection")
              nix-shell -p coreutils --run 'nix-shell -p gnutar --run "echo Artifact test data > artifact-data.txt && tar -czf artifacts.tar.gz *.txt"'
              ;;
            "geographic-distribution")
              nix-shell -p curl --run 'nix-shell -p jq --run "curl -s ipinfo.io | jq . > geographic-info.txt"'
              ;;
            "cascade-triggering")
              nix-shell -p github-cli --run 'nix-shell -p curl --run "echo Cascade test for ${{ github.repository }} > cascade-test.txt"'
              ;;
          esac

      - name: Ubuntu Nested Fallback
        if: failure()
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y curl jq tar
          echo "Ubuntu nested fallback for ${{ matrix.test_category }}" > nested-fallback-${{ matrix.test_category }}.txt
          curl -s ifconfig.me >> nested-fallback-${{ matrix.test_category }}.txt

      - name: Upload Nested Test Results
        uses: actions/upload-artifact@v4
        with:
          name: nested-test-${{ matrix.test_category }}-$(echo ${{ github.repository }} | cut -d/ -f2)
          path: "*.txt"
          retention-days: 2